#include "player_smart.hpp"
#include "player_smart_logic.hpp"

#include <stdexcept>
// #include <format>

namespace core::player {

static const LogicActions pointMapsByStepNought[] = {
  { // Step 0
    {0'777'717'777, {1, 1}},
    {0'111'121'111, {0, 0}},
  },
  { // Step 1
    {0'221'747'777, {0, 2}},
    {0'212'747'777, {0, 1}},
    {0'211'142'111, {2, 1}},
    {0'211'141'112, {0, 1}},
    {0'121'241'111, {0, 2}},
    {0'121'141'121, {0, 2}},

    {0'777'221'777, {1, 2}},
    {0'412'121'111, {2, 0}},
    {0'411'121'112, {0, 2}},
  },
  { // Step 2
    {0'774'747'177, {2, 0}}, // win
    {0'777'144'777, {1, 0}}, // win
    {0'221'747'777, {0, 2}},
    {0'212'747'777, {0, 1}},
    {0'242'141'121, {1, 0}},

    {0'414'727'777, {0, 1}}, // win
    {0'441'727'777, {0, 2}}, // win
    {0'772'727'177, {2, 0}},
    {0'777'221'777, {1, 2}},
    {0'421'121'142, {0, 2}},
    {0'411'422'211, {0, 2}},
  },
  { // Step 3
    {0'774'747'177, {2, 0}}, // win
    {0'777'144'777, {1, 0}}, // win
    {0'221'747'777, {0, 2}},
    {0'212'747'777, {0, 1}},
    {0'224'442'211, {2, 1}},

    {0'414'727'777, {0, 1}}, // win
    {0'441'727'777, {0, 2}}, // win
    {0'772'727'177, {2, 0}},
    {0'777'221'777, {1, 2}},
    {0'421'224'142, {0, 2}},
    {0'424'121'242, {1, 0}},
  }
};


Point SmartPlayerLogicNought::findActionPoint(StateHash hash) {
  return SmartPlayerLogic::findActionPointWithLogic(
      hash,
      pointMapsByStepNought,
      transformationsNought);
}

}
